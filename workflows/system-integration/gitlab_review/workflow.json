{
    "name": "gitlab review",
    "nodes": [
        {
            "parameters": {
                "conditions": {
                    "options": {
                        "version": 2,
                        "leftValue": "",
                        "caseSensitive": true,
                        "typeValidation": "strict"
                    },
                    "conditions": [
                        {
                            "id": "617eb2c5-dd4b-4e28-b533-0c32ea6ca961",
                            "operator": {
                                "name": "filter.operator.equals",
                                "type": "string",
                                "operation": "equals"
                            },
                            "leftValue": "={{ $json.body.object_attributes.note }}",
                            "rightValue": "+0"
                        }
                    ],
                    "combinator": "and"
                },
                "options": {}
            },
            "id": "f35e1978-2b20-43b9-851f-8f7838348437",
            "name": "Need Review",
            "type": "n8n-nodes-base.if",
            "position": [
                -1380,
                120
            ],
            "typeVersion": 2.2
        },
        {
            "parameters": {
                "fieldToSplitOut": "changes",
                "options": {}
            },
            "id": "76a280a0-919d-4a6a-9366-5e167b070ad4",
            "name": "Split Out",
            "type": "n8n-nodes-base.splitOut",
            "position": [
                -840,
                100
            ],
            "typeVersion": 1
        },
        {
            "parameters": {
                "conditions": {
                    "options": {
                        "version": 2,
                        "leftValue": "",
                        "caseSensitive": true,
                        "typeValidation": "strict"
                    },
                    "combinator": "and",
                    "conditions": [
                        {
                            "id": "c6e1430b-84a7-47ce-8fe9-7b94da0f2d31",
                            "operator": {
                                "type": "boolean",
                                "operation": "false",
                                "singleValue": true
                            },
                            "leftValue": "={{ $json.renamed_file }}",
                            "rightValue": ""
                        },
                        {
                            "id": "bf6e9eb9-d72d-459c-a722-9614bab8842c",
                            "operator": {
                                "type": "boolean",
                                "operation": "false",
                                "singleValue": true
                            },
                            "leftValue": "={{ $json.deleted_file }}",
                            "rightValue": ""
                        },
                        {
                            "id": "501623a9-9515-4034-bb13-a5a6a4f924eb",
                            "operator": {
                                "type": "string",
                                "operation": "startsWith"
                            },
                            "leftValue": "={{ $json.diff }}",
                            "rightValue": "@@"
                        }
                    ]
                },
                "options": {}
            },
            "id": "3ad03783-9624-4f78-a771-2bc6f414ef23",
            "name": "Skip File Changes",
            "type": "n8n-nodes-base.if",
            "position": [
                -600,
                100
            ],
            "typeVersion": 2.2
        },
        {
            "parameters": {
                "mode": "runOnceForEachItem",
                "jsCode": "const parseLastDiff = (gitDiff) => {\n  gitDiff = gitDiff.replace(/\\n\\\\ No newline at end of file/, '')\n  \n  const diffList = gitDiff.trimEnd().split('\\n').reverse();\n  const lastLineFirstChar = diffList?.[0]?.[0];\n  const lastDiff =\n    diffList.find((item) => {\n      return /^@@ \\-\\d+,\\d+ \\+\\d+,\\d+ @@/g.test(item);\n    }) || '';\n\n  const [lastOldLineCount, lastNewLineCount] = lastDiff\n    .replace(/@@ \\-(\\d+),(\\d+) \\+(\\d+),(\\d+) @@.*/g, ($0, $1, $2, $3, $4) => {\n      return `${+$1 + +$2},${+$3 + +$4}`;\n    })\n    .split(',');\n  \n  if (!/^\\d+$/.test(lastOldLineCount) || !/^\\d+$/.test(lastNewLineCount)) {\n    return {\n      lastOldLine: -1,\n      lastNewLine: -1,\n      gitDiff,\n    };\n  }\n\n\n  const lastOldLine = lastLineFirstChar === '+' ? null : (parseInt(lastOldLineCount) || 0) - 1;\n  const lastNewLine = lastLineFirstChar === '-' ? null : (parseInt(lastNewLineCount) || 0) - 1;\n\n  return {\n    lastOldLine,\n    lastNewLine,\n    gitDiff,\n  };\n};\n\nreturn parseLastDiff($input.item.json.diff)\n"
            },
            "id": "0f9dfd4e-2107-4ad6-af88-372b4665c9a8",
            "name": "Parse Last Diff Line",
            "type": "n8n-nodes-base.code",
            "position": [
                -360,
                80
            ],
            "typeVersion": 2
        },
        {
            "parameters": {
                "httpMethod": "POST",
                "path": "e21095c0-1876-4cd9-9e92-a2eac737f03e",
                "options": {}
            },
            "id": "f3ab2534-bd42-499b-b6c5-a219781c858d",
            "name": "Webhook",
            "type": "n8n-nodes-base.webhook",
            "position": [
                -1580,
                120
            ],
            "webhookId": "78214945-1731-46ca-a13f-132df9ee1d14",
            "typeVersion": 2
        },
        {
            "parameters": {
                "mode": "runOnceForEachItem",
                "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nvar diff = $input.item.json.gitDiff\n\nlet lines = diff.trimEnd().split('\\n');\n\nlet originalCode = '';\nlet newCode = '';\n\nlines.forEach(line => {\n  console.log(line)\n    if (line.startsWith('-')) {\n        originalCode += line + \"\\n\";\n    } else if (line.startsWith('+')) {\n        newCode += line + \"\\n\";\n    } else {\n        originalCode += line + \"\\n\";\n        newCode += line + \"\\n\";\n    }\n});\n\nreturn {\n  originalCode:originalCode,\n  newCode:newCode\n};\n\n"
            },
            "id": "10a94384-10ef-413e-ad9a-d028275a408b",
            "name": "Code",
            "type": "n8n-nodes-base.code",
            "position": [
                -160,
                80
            ],
            "typeVersion": 2
        },
        {
            "parameters": {
                "promptType": "define",
                "text": "=File path：{{ $('Skip File Changes').item.json.new_path }}\n\n```Original code\n {{ $json.originalCode }}\n```\nchange to\n```New code\n {{ $json.newCode }}\n```\nPlease review the code changes in this section:",
                "options": {
                    "systemMessage": "# Overview:| You are a senior programming expert Bot, responsible for reviewing code changes and providing review recommendations. At the beginning of the suggestion, it is necessary to clearly make a decision to \"reject\" or \"accept\" the code change, and rate the change in the format \"Change Score: Actual Score\", with a score range of 0-100 points. Then, point out the existing problems in concise language and a stern tone. If you feel it is necessary, you can directly provide the modified content. Your review proposal must use rigorous Markdown format.使用简体中文回复"
                }
            },
            "type": "@n8n/n8n-nodes-langchain.agent",
            "typeVersion": 1.8,
            "position": [
                -340,
                440
            ],
            "id": "13fe731a-d17b-49b2-a7fb-a54f6d8654e5",
            "name": "AI Agent",
            "executeOnce": false,
            "retryOnFail": true,
            "waitBetweenTries": 2000
        },
        {
            "parameters": {
                "options": {
                    "timeout": 600000
                }
            },
            "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
            "typeVersion": 1,
            "position": [
                -340,
                600
            ],
            "id": "d1ea3b5f-2c84-4442-ab2a-d6b8967511dc",
            "name": "DeepSeek Chat Model",
            "credentials": {
                "deepSeekApi": {
                    "id": "8YQBHRPs0Jw5j7mY",
                    "name": "DeepSeek account"
                }
            }
        },
        {
            "parameters": {
                "method": "POST",
                "url": "https://open.feishu.cn/open-apis/bot/v2/hook/填写飞书机器人ID",
                "sendHeaders": true,
                "headerParameters": {
                    "parameters": [
                        {
                            "name": "Content-Type",
                            "value": "application/json"
                        }
                    ]
                },
                "sendBody": true,
                "bodyParameters": {
                    "parameters": [
                        {
                            "name": "msg_type",
                            "value": "text"
                        },
                        {
                            "name": "content[text]",
                            "value": "=本次 MR review 完成，请及时查看【勿合，先修改review问题】：\n项目：{{ $('Webhook').item.json.body.project.name }}\nMR标题：{{ $('Get Changes').item.json.title }}\n发起时间：{{ new Date($('Get Changes').item.json.created_at).toLocaleString('zh-CN', { timeZone: 'Asia/Shanghai', hour12: false }) }}\n分支: {{ $('Get Changes').item.json.source_branch }} to {{ $('Get Changes').item.json.target_branch }}\nMR地址：{{ $('Get Changes').item.json.web_url }}\n\n@{{ $('Get Changes').item.json.author.username }}|{{ $('Get Changes').item.json.author.name }}"
                        }
                    ]
                },
                "options": {}
            },
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 4.2,
            "position": [
                220,
                440
            ],
            "id": "a31a6471-cf5d-4b76-952a-7c06c11e235a",
            "name": "Feishu Notify"
        },
        {
            "parameters": {
                "method": "POST",
                "url": "=http://gitlab私有部署地址/api/v4/projects/{{ $('Webhook').item.json.body.project.id }}/merge_requests/{{ $('Webhook').item.json.body.object_attributes.iid || $('Webhook').item.json.body.merge_request.iid }}/discussions",
                "sendHeaders": true,
                "headerParameters": {
                    "parameters": [
                        {
                            "name": "PRIVATE-TOKEN",
                            "value": "填写gitlab的token"
                        }
                    ]
                },
                "sendBody": true,
                "contentType": "multipart-form-data",
                "bodyParameters": {
                    "parameters": [
                        {
                            "name": "body",
                            "value": "={{ $json.output }}"
                        },
                        {
                            "name": "position[old_path]",
                            "value": "={{ $('Split Out').item.json.old_path }}"
                        },
                        {
                            "name": "position[new_path]",
                            "value": "={{ $('Split Out').item.json.new_path }}"
                        },
                        {
                            "name": "position[start_sha]",
                            "value": "={{ $('Get Changes').item.json.diff_refs.start_sha }}"
                        },
                        {
                            "name": "position[head_sha]",
                            "value": "={{ $('Get Changes').item.json.diff_refs.head_sha }}"
                        },
                        {
                            "name": "position[base_sha]",
                            "value": "={{ $('Get Changes').item.json.diff_refs.base_sha }}"
                        },
                        {
                            "name": "position[new_line]",
                            "value": "={{ $('Parse Last Diff Line').item.json.lastNewLine || ''  }}"
                        },
                        {
                            "name": "position[old_line]",
                            "value": "={{ $('Parse Last Diff Line').item.json.lastOldLine || '' }}"
                        },
                        {
                            "name": "position[position_type]",
                            "value": "text"
                        }
                    ]
                },
                "options": {}
            },
            "id": "1b5f8648-cf63-40c4-bef0-37bfd0c19979",
            "name": "Post Discussions1",
            "type": "n8n-nodes-base.httpRequest",
            "position": [
                -60,
                440
            ],
            "typeVersion": 4.2
        },
        {
            "parameters": {
                "url": "=http://gitlab私有部署地址/api/v4/projects/{{ $json.body.project.id }}/merge_requests/{{ $json.body.object_attributes.iid || $json.body.merge_request.iid }}/changes",
                "sendHeaders": true,
                "headerParameters": {
                    "parameters": [
                        {
                            "name": "PRIVATE-TOKEN",
                            "value": "填写gitlab的token"
                        }
                    ]
                },
                "options": {}
            },
            "id": "8d24edbf-7e1a-410f-a6a7-09ff02d7e317",
            "name": "Get Changes",
            "type": "n8n-nodes-base.httpRequest",
            "position": [
                -1080,
                100
            ],
            "typeVersion": 4.2
        },
        {
            "parameters": {
                "keep": "lastItems"
            },
            "type": "n8n-nodes-base.limit",
            "typeVersion": 1,
            "position": [
                80,
                440
            ],
            "id": "b283f04e-ef98-4629-8531-452b5fedc9f3",
            "name": "Limit"
        },
        {
            "parameters": {
                "conditions": {
                    "options": {
                        "caseSensitive": true,
                        "leftValue": "",
                        "typeValidation": "strict",
                        "version": 2
                    },
                    "conditions": [
                        {
                            "id": "cd82dc9d-db69-4015-ad32-041df9d7fd58",
                            "leftValue": "={{ $json.body.object_attributes.note }}",
                            "rightValue": "+1",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        }
                    ],
                    "combinator": "and"
                },
                "options": {}
            },
            "type": "n8n-nodes-base.if",
            "typeVersion": 2.2,
            "position": [
                -1100,
                400
            ],
            "id": "a67a7479-63e8-4b0b-9d05-8c410b307550",
            "name": "If",
            "notesInFlow": true,
            "notes": "判定是否进行合并通知"
        },
        {
            "parameters": {
                "conditions": {
                    "options": {
                        "caseSensitive": true,
                        "leftValue": "",
                        "typeValidation": "strict",
                        "version": 2
                    },
                    "conditions": [
                        {
                            "id": "d0b1a07b-8b54-41ea-9129-c86504f085d6",
                            "leftValue": "={{ $json.headers[\"x-gitlab-event\"] }}",
                            "rightValue": "Merge Request Hook",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        },
                        {
                            "id": "5940fe07-a3af-41c0-8eae-5ec2ce417987",
                            "leftValue": "={{ $json.body.object_attributes.state }}",
                            "rightValue": "merged",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        },
                        {
                            "id": "89b6a631-fbe7-4b7d-94d6-427774295b8c",
                            "leftValue": "={{ $json.body.object_attributes.target_branch }}",
                            "rightValue": "master",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        }
                    ],
                    "combinator": "and"
                },
                "options": {}
            },
            "type": "n8n-nodes-base.if",
            "typeVersion": 2.2,
            "position": [
                -860,
                580
            ],
            "id": "f975a3ee-b568-4e08-89c8-341cec5d3852",
            "name": "If1",
            "notesInFlow": true,
            "notes": "判定是否发送已合并通知"
        },
        {
            "parameters": {
                "method": "POST",
                "url": "https://open.feishu.cn/open-apis/bot/v2/hook/填写飞书机器人ID",
                "sendBody": true,
                "bodyParameters": {
                    "parameters": [
                        {
                            "name": "msg_type",
                            "value": "text"
                        },
                        {
                            "name": "content[text]",
                            "value": "=本次 MR 已合并，请发版： \n项目：{{ $('Webhook').item.json.body.project.name }} \nMR标题：{{ $('Webhook').item.json.body.object_attributes.title }}\n发起时间：{{ new Date($('Webhook').item.json.body.object_attributes.created_at).toLocaleString('zh-CN', { timeZone: 'Asia/Shanghai', hour12: false }) }} \n分支: {{ $('Webhook').item.json.body.object_attributes.source_branch }} to {{ $('Webhook').item.json.body.object_attributes.target_branch }}\nMR地址：{{ $('Webhook').item.json.body.object_attributes.url }}\n\n@{{ $('Webhook').item.json.body.user.username }}|{{ $('Webhook').item.json.body.user.name }}"
                        }
                    ]
                },
                "options": {}
            },
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 4.2,
            "position": [
                -660,
                560
            ],
            "id": "03e89d42-dc3c-4ffa-810d-bd120a1baccb",
            "name": "发送已合并通知"
        },
        {
            "parameters": {
                "method": "POST",
                "url": "https://open.feishu.cn/open-apis/bot/v2/hook/填写飞书机器人ID",
                "sendBody": true,
                "bodyParameters": {
                    "parameters": [
                        {
                            "name": "msg_type",
                            "value": "text"
                        },
                        {
                            "name": "content[text]",
                            "value": "=本次 MR 可合并： \n项目：{{ $('Webhook').item.json.body.project.name }} \nMR标题：{{ $json.body.merge_request.title }}\n发起时间：{{ new Date($json.body.merge_request.updated_at).toLocaleString('zh-CN', { timeZone: 'Asia/Shanghai', hour12: false }) }} \n分支: {{ $json.body.merge_request.source_branch }} to {{ $json.body.merge_request.target_branch }}\nMR地址：{{ $json.body.merge_request.url }}\n<at user_id=\"all\">所有人</at>"
                        }
                    ]
                },
                "options": {}
            },
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 4.2,
            "position": [
                -860,
                380
            ],
            "id": "211b7a23-8b0f-4f0b-abbd-6acfbecae552",
            "name": "发送可合并通知"
        },
        {
            "parameters": {
                "content": "## 工作流简介\n### 主要功能\n该工作流主要实现了通过AI进行代码review的功能。结合gitlab的webhoot触发机制以实现代码的自动review。\n\n### 主要节点\n1. webhoot 节点。\n2. code 节点。\n3. AI Agent 节点。\n4. HTTP 节点、\n\n### 适用场景\n自建gitlab仓库。",
                "height": 380,
                "width": 280
            },
            "type": "n8n-nodes-base.stickyNote",
            "typeVersion": 1,
            "position": [
                -1940,
                0
            ],
            "id": "39544f87-46a7-4efc-b373-308f5af9ca3c",
            "name": "Sticky Note"
        },
        {
            "parameters": {
                "content": "## Webhook 节点\n用于接收外部触发器触发的请求。",
                "height": 380
            },
            "type": "n8n-nodes-base.stickyNote",
            "typeVersion": 1,
            "position": [
                -1660,
                0
            ],
            "id": "c473c6de-27f3-4c99-8367-c28e0f610e65",
            "name": "Sticky Note1"
        },
        {
            "parameters": {
                "content": "## need review\n判断此次触发请求是否需要走后门的review流程",
                "height": 380
            },
            "type": "n8n-nodes-base.stickyNote",
            "typeVersion": 1,
            "position": [
                -1420,
                0
            ],
            "id": "2c4c029f-9265-4cae-bf46-777b20368196",
            "name": "Sticky Note2"
        },
        {
            "parameters": {
                "content": "## 拆解待review代码\n这个框中的各个节点主要是用来对待review代码进行数据提取及格式整理，以供AI Agent进行review。",
                "height": 260,
                "width": 1540
            },
            "type": "n8n-nodes-base.stickyNote",
            "typeVersion": 1,
            "position": [
                -1180,
                0
            ],
            "id": "a20a72d7-644d-43fe-8158-0d44f8cfe321",
            "name": "Sticky Note3"
        },
        {
            "parameters": {
                "content": "## review并发表评论\n调用AI模型接口进行代码review，并将review结果以评论的形式发送到gitlab",
                "height": 500,
                "width": 440
            },
            "type": "n8n-nodes-base.stickyNote",
            "typeVersion": 1,
            "position": [
                -380,
                260
            ],
            "id": "1bdfbce4-b0c4-46c9-99f9-f10c26336a02",
            "name": "Sticky Note4"
        },
        {
            "parameters": {
                "content": "## 发送review完成通知\n构建review完成通知并发送到飞书机器人",
                "height": 500,
                "width": 300
            },
            "type": "n8n-nodes-base.stickyNote",
            "typeVersion": 1,
            "position": [
                60,
                260
            ],
            "id": "f7aa1fb6-1d22-4167-9305-b9d8f7ccc06c",
            "name": "Sticky Note5"
        },
        {
            "parameters": {
                "content": "## 其他情况处理\n1. 发起合并通知\n2. 完成合并通知",
                "height": 500,
                "width": 800
            },
            "type": "n8n-nodes-base.stickyNote",
            "typeVersion": 1,
            "position": [
                -1180,
                260
            ],
            "id": "afbdf495-89f5-471b-b9be-3d0c8aa2e1d8",
            "name": "Sticky Note6"
        }
    ],
    "pinData": {},
    "connections": {
        "Code": {
            "main": [
                [
                    {
                        "node": "AI Agent",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Webhook": {
            "main": [
                [
                    {
                        "node": "Need Review",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Split Out": {
            "main": [
                [
                    {
                        "node": "Skip File Changes",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Need Review": {
            "main": [
                [
                    {
                        "node": "Get Changes",
                        "type": "main",
                        "index": 0
                    }
                ],
                [
                    {
                        "node": "If",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Skip File Changes": {
            "main": [
                [
                    {
                        "node": "Parse Last Diff Line",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Parse Last Diff Line": {
            "main": [
                [
                    {
                        "node": "Code",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "DeepSeek Chat Model": {
            "ai_languageModel": [
                [
                    {
                        "node": "AI Agent",
                        "type": "ai_languageModel",
                        "index": 0
                    }
                ]
            ]
        },
        "AI Agent": {
            "main": [
                [
                    {
                        "node": "Post Discussions1",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Post Discussions1": {
            "main": [
                [
                    {
                        "node": "Limit",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Get Changes": {
            "main": [
                [
                    {
                        "node": "Split Out",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Limit": {
            "main": [
                [
                    {
                        "node": "Feishu Notify",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "If": {
            "main": [
                [
                    {
                        "node": "发送可合并通知",
                        "type": "main",
                        "index": 0
                    }
                ],
                [
                    {
                        "node": "If1",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "If1": {
            "main": [
                [
                    {
                        "node": "发送已合并通知",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        }
    },
    "active": true,
    "settings": {
        "executionOrder": "v1"
    },
    "versionId": "77a016a0-b5a9-491e-99d0-9e3bfa0f1cdb",
    "meta": {
        "templateCredsSetupCompleted": true,
        "instanceId": "2f1ce8ea57c024a580bef98010b7171e5cb83da9fbd5c3219ab48aac1459d4be"
    },
    "id": "WbR0Ht03dcKdtai5",
    "tags": []
}